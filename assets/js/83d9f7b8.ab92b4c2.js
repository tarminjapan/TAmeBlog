"use strict";(self.webpackChunkt_ame_blog=self.webpackChunkt_ame_blog||[]).push([[2486],{4765:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2025/04/09/2025/04/abc273_e","metadata":{"permalink":"/TAmeBlog/blog/2025/04/09/2025/04/abc273_e","source":"@site/blog/2025/04/2025-04-09-abc273_e.md","title":"AtCoder ABC273 E - Notebook \u89e3\u8aac","description":"\u554f\u984c\u30da\u30fc\u30b8:","date":"2025-04-09T00:00:00.000Z","tags":[{"inline":true,"label":"AtCoder","permalink":"/TAmeBlog/blog/tags/at-coder"},{"inline":true,"label":"ABC273","permalink":"/TAmeBlog/blog/tags/abc-273"},{"inline":true,"label":"E","permalink":"/TAmeBlog/blog/tags/e"},{"inline":true,"label":"\u6728\u69cb\u9020","permalink":"/TAmeBlog/blog/tags/\u6728\u69cb\u9020"},{"inline":true,"label":"\u30b0\u30e9\u30d5","permalink":"/TAmeBlog/blog/tags/\u30b0\u30e9\u30d5"},{"inline":true,"label":"\u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7","permalink":"/TAmeBlog/blog/tags/\u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7"}],"readingTime":2.55,"hasTruncateMarker":true,"authors":[{"name":"TAmemiya","title":"Small fry IT technician","imageURL":"https://github.com/tarminjapan.png","key":"tame","page":null}],"frontMatter":{"title":"AtCoder ABC273 E - Notebook \u89e3\u8aac","date":"2025-04-09T00:00:00.000Z","authors":["tame"],"tags":["AtCoder","ABC273","E","\u6728\u69cb\u9020","\u30b0\u30e9\u30d5","\u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7"]},"unlisted":false,"nextItem":{"title":"AtCoder ABC229 E - Graph Destruction \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/08/2025/04/abc229_e"}},"content":"**\u554f\u984c\u30da\u30fc\u30b8:** <https://atcoder.jp/contests/abc273/tasks/abc273_e>\\n\\n**\u63d0\u51fa\u30b3\u30fc\u30c9:** <https://atcoder.jp/contests/abc273/submissions/64643275>\\n\\n## \u65b9\u91dd\\n\\n\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306e\u72b6\u614b\u5c65\u6b74\u3092\u6728\u69cb\u9020\uff08\u30b0\u30e9\u30d5\uff09\u3067\u7ba1\u7406\u3057\u3001\u5404\u64cd\u4f5c\u3092\u6728\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u3068\u3057\u3066\u5b9f\u73fe\u3057\u307e\u3059\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n\u73fe\u5728\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306e\u72b6\u614b\u306b\u5bfe\u5fdc\u3059\u308b\u6728\uff08\u30b0\u30e9\u30d5\uff09\u4e0a\u306e\u30ce\u30fc\u30c9ID\u3092\u4fdd\u6301\u3059\u308b\u5909\u6570 `cv` \u3092\u7528\u610f\u3057\u307e\u3059\u3002\u521d\u671f\u72b6\u614b\u306f\u30ce\u30fc\u30c9 `0` (\u6839) \u3068\u3057\u307e\u3059\u3002\u5404\u30af\u30a8\u30ea`ADD`, `DELETE`, `SAVE`, `LOAD`\u306f\u4ee5\u4e0b\u306e\u30ed\u30b8\u30c3\u30af\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\\n\\n- `ADD`\\n  - \u73fe\u5728\u306e\u30ce\u30fc\u30c9 `cv` \u304b\u3089\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3001\u305d\u306e\u30ce\u30fc\u30c9\u306b\u6570\u5024 $x$ \u3092\u95a2\u9023\u4ed8\u3051\u307e\u3059\u3002\\n  - \u73fe\u5728\u4f4d\u7f6e\u3092\u793a\u3059 `cv` \u3092\u3001\u65b0\u3057\u304f\u8ffd\u52a0\u3057\u305f\u30ce\u30fc\u30c9\u306eID\u306b\u66f4\u65b0\u3057\u307e\u3059\u3002\\n- `DELETE`\\n  - \u73fe\u5728\u4f4d\u7f6e\u3092\u793a\u3059 `cv` \u3092\u3001\u305d\u306e\u89aa\u30ce\u30fc\u30c9\u306eID\u306b\u66f4\u65b0\u3057\u307e\u3059\u3002\\n  - \u305f\u3060\u3057\u3001\u73fe\u5728\u306e\u30ce\u30fc\u30c9\u304c\u6839\uff08\u30eb\u30fc\u30c8\uff09\u3067\u3042\u308b\u5834\u5408\u306f\u4f55\u3082\u3057\u307e\u305b\u3093\u3002\\n- `SAVE`\\n  - \u30ce\u30fc\u30c8\u306e\u30da\u30fc\u30b8 `y` \u306b\u73fe\u5728\u306e\u30ce\u30fc\u30c9ID `cv` \u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\u30ce\u30fc\u30c8\u306e\u7ba1\u7406\u306b\u306f\u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7\uff08C#\u306e `Dictionary`\uff09\u3092\u7528\u3044\u307e\u3059\u3002\\n- `LOAD`\\n  - \u73fe\u5728\u4f4d\u7f6e\u3092\u793a\u3059 `cv` \u3092\u3001\u30ce\u30fc\u30c8\u306e\u30da\u30fc\u30b8 `z` \u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u30ce\u30fc\u30c9ID\u306b\u5909\u66f4\u3057\u307e\u3059\u3002 (\u3082\u3057\u30da\u30fc\u30b8 `z` \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001`cv` \u3092\u521d\u671f\u72b6\u614b\u3067\u3042\u308b\u30ce\u30fc\u30c9 `0` \u306eID\u306b\u3057\u307e\u3059\u3002)\\n\\n**\u5b9f\u88c5:**\\n\\n```csharp\\npublic class Solve\\n{\\n    public static void Run()\\n    {\\n        var iQ = ReadLine.Int();\\n        var iQs = ReadLine.StringMatrix(iQ);\\n\\n        var notes = new Dictionary<int, int>();\\n        var sdg = new SimpleUndirectedGraph();\\n        var nums = Enumerable.Repeat(-1, iQ + 1).ToArray();\\n        var prts = new int[iQ + 1];\\n        sdg.AaddVertex(0);\\n        var cv = 0;\\n        var ans = new Queue<int>();\\n\\n        for (int i = 0; i < iQ; i++)\\n        {\\n            var q = iQs[i];\\n            var tv = i + 1;\\n\\n            if (q[0] == \\"ADD\\")\\n            {\\n                // \u73fe\u5728\u306e\u4f4d\u7f6e\u304b\u3089\u65b0\u3057\u304f\u679d\u3092\u4f5c\u6210\u3059\u308b\u3002\\n                var x = int.Parse(q[1]);\\n                sdg.AddEdge(cv, tv);\\n                nums[tv] = x;\\n                prts[tv] = cv;\\n                cv = tv;\\n            }\\n            else if (q[0] == \\"DELETE\\" && cv != 0)\\n            {\\n                // 1\u500b\u4e0a\u306e\u30ce\u30fc\u30c9\u306b\u623b\u308b\u3002\\n                cv = prts[cv];\\n            }\\n            else if (q[0] == \\"SAVE\\")\\n            {\\n                // \u30ce\u30fc\u30c8\u306b\u73fe\u5728\u306e\u4f4d\u7f6e\u3092\u66f8\u304d\u8fbc\u3080\\n                var y = int.Parse(q[1]);\\n                notes.TryAdd(y, 0);\\n                notes[y] = cv;\\n            }\\n            else if (q[0] == \\"LOAD\\")\\n            {\\n                // \u73fe\u5728\u306e\u4f4d\u7f6e\u3092\u30ce\u30fc\u30c8\u306e\u4f4d\u7f6e\u306b\u3059\u308b\\n                var z = int.Parse(q[1]);\\n                cv = notes.TryGetValue(z, out var nv) ? nv : 0;\\n            }\\n\\n            ans.Enqueue(nums[cv]);\\n        }\\n\\n        Console.WriteLine(string.Join(\\" \\", ans));\\n    }\\n}\\n```"},{"id":"/2025/04/08/2025/04/abc229_e","metadata":{"permalink":"/TAmeBlog/blog/2025/04/08/2025/04/abc229_e","source":"@site/blog/2025/04/2025-04-08-abc229_e.md","title":"AtCoder ABC229 E - Graph Destruction \u89e3\u8aac","description":"\u554f\u984c\u30da\u30fc\u30b8:","date":"2025-04-08T00:00:00.000Z","tags":[{"inline":true,"label":"AtCoder","permalink":"/TAmeBlog/blog/tags/at-coder"},{"inline":true,"label":"ABC229","permalink":"/TAmeBlog/blog/tags/abc-229"},{"inline":true,"label":"E","permalink":"/TAmeBlog/blog/tags/e"},{"inline":true,"label":"UnionFindTree","permalink":"/TAmeBlog/blog/tags/union-find-tree"},{"inline":true,"label":"\u30b0\u30e9\u30d5","permalink":"/TAmeBlog/blog/tags/\u30b0\u30e9\u30d5"},{"inline":true,"label":"\u9023\u7d50\u6210\u5206","permalink":"/TAmeBlog/blog/tags/\u9023\u7d50\u6210\u5206"}],"readingTime":3.135,"hasTruncateMarker":true,"authors":[{"name":"TAmemiya","title":"Small fry IT technician","imageURL":"https://github.com/tarminjapan.png","key":"tame","page":null}],"frontMatter":{"title":"AtCoder ABC229 E - Graph Destruction \u89e3\u8aac","date":"2025-04-08T00:00:00.000Z","authors":["tame"],"tags":["AtCoder","ABC229","E","UnionFindTree","\u30b0\u30e9\u30d5","\u9023\u7d50\u6210\u5206"]},"unlisted":false,"prevItem":{"title":"AtCoder ABC273 E - Notebook \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/09/2025/04/abc273_e"},"nextItem":{"title":"AtCoder ABC275 D - Yet Another Recursive Function \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/07/2025/04/abc275_d"}},"content":"**\u554f\u984c\u30da\u30fc\u30b8:** <https://atcoder.jp/contests/abc229/tasks/abc229_e>\\n\\n**\u63d0\u51fa\u30b3\u30fc\u30c9:** <https://atcoder.jp/contests/abc229/submissions/64624224>\\n\\n## \u65b9\u91dd\\n\\n\u5404\u9023\u7d50\u6210\u5206\u306fUnionFindTree\u3092\u7528\u3044\u3066\u7ba1\u7406\u3057\u307e\u3059\u3002\u9023\u7d50\u6210\u5206\u306e\u6570\u3092\u4fdd\u6301\u3059\u308b\u5909\u6570\u3092\u7528\u610f\u3057\u307e\u3059\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n- \u9802\u70b9 $N, N-1, N-2, \\\\cdots, 2$ \u306e\u9806\u756a\u306b\u9802\u70b9\u3068\u8fba\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\\n  - \u9802\u70b9\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u306b\u3001\u9023\u7d50\u6210\u5206\u306e\u6570\u30921\u5897\u3084\u3057\u307e\u3059\u3002\\n  - \u8fba\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u3001\u7d50\u3070\u308c\u308b2\u3064\u306e\u9802\u70b9\u304c\u7570\u306a\u308b\u9023\u7d50\u6210\u5206\u306b\u5c5e\u3059\u308b\u5834\u5408\u306f\u3001\u9023\u7d50\u6210\u5206\u306e\u6570\u30921\u6e1b\u3089\u3057\u307e\u3059\uff082\u3064\u306e\u9023\u7d50\u6210\u5206\u304c1\u3064\u306b\u307e\u3068\u307e\u308b\u305f\u3081\u3067\u3059\uff09\u3002\\n- \u9802\u70b9 $i$ \u306b\u63a5\u7d9a\u3057\u3001\u304b\u3064 $i$ \u3088\u308a\u5927\u304d\u3044\u756a\u53f7\u3092\u6301\u3064\u9802\u70b9\u3092\u52b9\u7387\u7684\u306b\u5217\u6319\u3059\u308b\u305f\u3081\u3001\u8fba\u306e\u60c5\u5831\u306f`Dictionary<int, SortedSet<int>>`\u3067\u7ba1\u7406\u3057\u307e\u3059\u3002\uff08`SortedSet`\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u8ffd\u52a0\u6e08\u307f\u306e\u96a3\u63a5\u9802\u70b9 $\\\\left(j > i \\\\right)$ \u3092\u52b9\u7387\u7684\u306b\u898b\u3064\u3051\u3089\u308c\u307e\u3059\u3002\uff09\\n\\n**\u5b9f\u88c5:**\\n\\n```csharp\\npublic class Solve\\n{\\n    public static void Run()\\n    {\\n        var inputs = ReadLine.Ints();\\n        int iN = inputs[0], iM = inputs[1];\\n        var iAB = ReadLine.IntMatrix(iM);\\n\\n        var ufTree = new UnionFindTree<int>();\\n        var edges = new Dictionary<int, SortedSet<int>>();\\n\\n        foreach (var ab in iAB)\\n        {\\n            edges.TryAdd(ab[0], new SortedSet<int>());\\n            edges.TryAdd(ab[1], new SortedSet<int>());\\n            edges[ab[0]].Add(ab[1]);\\n            edges[ab[1]].Add(ab[0]);\\n        }\\n\\n        var conns = 0; // \u73fe\u5728\u306e\u9023\u7d50\u6210\u5206\u306e\u6570\\n        var stack = new Stack<int>(); // \u5404\u6642\u70b9(\u9802\u70b9i\u3092\u8ffd\u52a0\u3057\u305f\u5f8c)\u306e\u9023\u7d50\u6210\u5206\u6570\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e\u30b9\u30bf\u30c3\u30af\\n        stack.Push(0); // \u521d\u671f\u72b6\u614b\uff08\u9802\u70b91\u306e\u307f\uff09\u306e\u9023\u7d50\u6210\u5206\u6570\u306f0\\n\\n        for (int i = iN; 2 <= i; i--) // \u9802\u70b9\u3092N\u304b\u30892\u307e\u3067\u9006\u9806\u306b\u8ffd\u52a0\u3057\u3066\u3044\u304f\\n        {\\n            conns++; // \u65b0\u3057\u3044\u9802\u70b9\u3092\u8ffd\u52a0\u3059\u308b\u306e\u3067\u3001\u9023\u7d50\u6210\u5206\u304c1\u3064\u5897\u3048\u308b\\n            ufTree.Add(i); // UnionFindTree\u306b\u9802\u70b9i\u3092\u8ffd\u52a0\\n\\n            if (edges.TryGetValue(i, out var js))\\n                // \u9802\u70b9i\u306b\u63a5\u7d9a\u3057\u3001\u65e2\u306b\u30b0\u30e9\u30d5\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b(j > i)\u9802\u70b9j\u3068\u306e\u8fba\u3092\u51e6\u7406\u3059\u308b\\n                // SortedSet\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067Max\u3067\u6700\u5927\u306ej\u3092\u53d6\u5f97\u3057\u3001\u52b9\u7387\u7684\u306b\u51e6\u7406\u3067\u304d\u308b\\n                while (i < js.Max)\\n                {\\n                    var j = js.Max; // i < j \u3068\u306a\u308b\u6700\u5927\u306e\u96a3\u63a5\u9802\u70b9j\u3092\u53d6\u5f97\\n                    js.Remove(j); // \u51e6\u7406\u6e08\u307f\u3068\u3057\u3066\u524a\u9664\\n\\n                    var ri = ufTree.FindRoot(i);\\n                    var rj = ufTree.FindRoot(j);\\n\\n                    if (ri != rj) // i\u3068j\u304c\u7570\u306a\u308b\u9023\u7d50\u6210\u5206\u306b\u5c5e\u3057\u3066\u3044\u308c\u3070\\n                    {\\n                        ufTree.Union(i, j); // \u9023\u7d50\u6210\u5206\u3092\u7d71\u5408\\n                        conns--; // \u9023\u7d50\u6210\u5206\u306e\u6570\u30921\u6e1b\u3089\u3059\\n                    }\\n\\n                    edges[j].Remove(i); // \u5bfe\u79f0\u7684\u306a\u8fba\u60c5\u5831\u3082\u524a\u9664 (j -> i)\\n                }\\n\\n            stack.Push(conns); // \u9802\u70b9i\u3092\u8ffd\u52a0\u3057\u7d42\u3048\u305f\u6642\u70b9\u3067\u306e\u9023\u7d50\u6210\u5206\u6570\u3092\u8a18\u9332\\n        }\\n\\n        while (1 <= stack.Count)\\n            Console.WriteLine(stack.Pop());\\n    }\\n}\\n```"},{"id":"/2025/04/07/2025/04/abc275_d","metadata":{"permalink":"/TAmeBlog/blog/2025/04/07/2025/04/abc275_d","source":"@site/blog/2025/04/2025-04-07-abc275_d.md","title":"AtCoder ABC275 D - Yet Another Recursive Function \u89e3\u8aac","description":"\u554f\u984c\u30da\u30fc\u30b8:","date":"2025-04-07T00:00:00.000Z","tags":[{"inline":true,"label":"AtCoder","permalink":"/TAmeBlog/blog/tags/at-coder"},{"inline":true,"label":"ABC275","permalink":"/TAmeBlog/blog/tags/abc-275"},{"inline":true,"label":"D","permalink":"/TAmeBlog/blog/tags/d"},{"inline":true,"label":"\u30e1\u30e2\u5316\u518d\u5e30","permalink":"/TAmeBlog/blog/tags/\u30e1\u30e2\u5316\u518d\u5e30"},{"inline":true,"label":"\u52d5\u7684\u8a08\u753b\u6cd5","permalink":"/TAmeBlog/blog/tags/\u52d5\u7684\u8a08\u753b\u6cd5"},{"inline":true,"label":"\u518d\u5e30\u95a2\u6570","permalink":"/TAmeBlog/blog/tags/\u518d\u5e30\u95a2\u6570"}],"readingTime":1.935,"hasTruncateMarker":true,"authors":[{"name":"TAmemiya","title":"Small fry IT technician","imageURL":"https://github.com/tarminjapan.png","key":"tame","page":null}],"frontMatter":{"title":"AtCoder ABC275 D - Yet Another Recursive Function \u89e3\u8aac","date":"2025-04-07T00:00:00.000Z","authors":["tame"],"tags":["AtCoder","ABC275","D","\u30e1\u30e2\u5316\u518d\u5e30","\u52d5\u7684\u8a08\u753b\u6cd5","\u518d\u5e30\u95a2\u6570"]},"unlisted":false,"prevItem":{"title":"AtCoder ABC229 E - Graph Destruction \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/08/2025/04/abc229_e"},"nextItem":{"title":"AtCoder ABC254 D - Together Square \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/06/2025/04/abc254_d"}},"content":"**\u554f\u984c\u30da\u30fc\u30b8:** <https://atcoder.jp/contests/abc275/tasks/abc275_d>\\n\\n**\u63d0\u51fa\u30b3\u30fc\u30c9:** <https://atcoder.jp/contests/abc275/submissions/64602064>\\n\\n## \u65b9\u91dd\\n\\n\u3053\u306e\u554f\u984c\u306f**\u30e1\u30e2\u5316\u518d\u5e30**\u3092\u7528\u3044\u3066\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n\u554f\u984c\u3067\u4e0e\u3048\u3089\u308c\u308b\u6f38\u5316\u5f0f $f \\\\left( k \\\\right) = f \\\\left( \\\\lfloor \\\\frac{k}{2} \\\\rfloor \\\\right) + f \\\\left( \\\\lfloor \\\\frac{k}{3} \\\\rfloor \\\\right)$ \u306b\u57fa\u3065\u304d\u3001\u518d\u5e30\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001$k=0$ \u306e\u3068\u304d\u306f $f(0)=1$ \u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\\n\\n\u3053\u306e\u6f38\u5316\u5f0f\u3092\u5358\u7d14\u306b\u518d\u5e30\u95a2\u6570\u3067\u5b9f\u88c5\u3059\u308b\u3068\u3001\u540c\u3058 $k$ \u306b\u5bfe\u3059\u308b $f(k)$ \u304c\u4f55\u5ea6\u3082\u8a08\u7b97\u3055\u308c\u308b\u305f\u3081\u3001\u8a08\u7b97\u91cf\u304c\u7206\u767a\u3057\u5b9f\u884c\u6642\u9593\u5236\u9650\u3092\u8d85\u904e\uff08TLE: Time Limit Exceeded\uff09\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\\n\\n\u305d\u3053\u3067\u3001\u4e00\u5ea6\u8a08\u7b97\u3057\u305f $f(k)$ \u306e\u7d50\u679c\u3092\u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7\uff08C#\u3067\u306f `Dictionary`\uff09\u306b\u4fdd\u5b58\uff08\u30e1\u30e2\u5316\uff09\u3057\u307e\u3059\u3002\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u305f\u969b\u3001\u307e\u305a\u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7\u306b $k$ \u306b\u5bfe\u5fdc\u3059\u308b\u5024\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308c\u3070\u305d\u306e\u5024\u3092\u8fd4\u3057\u3001\u4fdd\u5b58\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u6f38\u5316\u5f0f\u306b\u5f93\u3063\u3066\u8a08\u7b97\u3057\u3001\u305d\u306e\u7d50\u679c\u3092\u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7\u306b\u4fdd\u5b58\u3057\u3066\u304b\u3089\u8fd4\u3057\u307e\u3059\u3002\\n\\n\u3053\u308c\u306b\u3088\u308a\u3001\u5404 $k$ \u306b\u5bfe\u3059\u308b\u8a08\u7b97\u306f\u9ad8\u30051\u56de\u3057\u304b\u884c\u308f\u308c\u306a\u304f\u306a\u308a\u3001\u52b9\u7387\u7684\u306b\u89e3\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n**\u5b9f\u88c5:**\\n\\n```csharp\\npublic class Solve\\n{\\n    public static void Run()\\n    {\\n        var iN = ReadLine.Long();\\n\\n        var dic = new Dictionary<long, long> { { 0L, 1L } };\\n        var ans = Function(dic, iN);\\n\\n        Console.WriteLine(ans);\\n    }\\n\\n    public static long Function(Dictionary<long, long> dic, long n)\\n    {\\n        if (dic.TryGetValue(n, out var r))\\n            return r;\\n\\n        var num = Function(dic, n / 2L) + Function(dic, n / 3L);\\n\\n        dic.Add(n, num);\\n\\n        return num;\\n    }\\n}\\n```"},{"id":"/2025/04/06/2025/04/abc254_d","metadata":{"permalink":"/TAmeBlog/blog/2025/04/06/2025/04/abc254_d","source":"@site/blog/2025/04/2025-04-06-abc254_d.md","title":"AtCoder ABC254 D - Together Square \u89e3\u8aac","description":"\u554f\u984c\u30da\u30fc\u30b8//atcoder.jp/contests/abc254/tasks/abc254d","date":"2025-04-06T00:00:00.000Z","tags":[{"inline":true,"label":"AtCoder","permalink":"/TAmeBlog/blog/tags/at-coder"},{"inline":true,"label":"ABC254","permalink":"/TAmeBlog/blog/tags/abc-254"},{"inline":true,"label":"D","permalink":"/TAmeBlog/blog/tags/d"},{"inline":true,"label":"\u7d20\u56e0\u6570\u5206\u89e3","permalink":"/TAmeBlog/blog/tags/\u7d20\u56e0\u6570\u5206\u89e3"},{"inline":true,"label":"\u5e73\u65b9\u6570","permalink":"/TAmeBlog/blog/tags/\u5e73\u65b9\u6570"}],"readingTime":6.81,"hasTruncateMarker":true,"authors":[{"name":"TAmemiya","title":"Small fry IT technician","imageURL":"https://github.com/tarminjapan.png","key":"tame","page":null}],"frontMatter":{"title":"AtCoder ABC254 D - Together Square \u89e3\u8aac","date":"2025-04-06T00:00:00.000Z","authors":["tame"],"tags":["AtCoder","ABC254","D","\u7d20\u56e0\u6570\u5206\u89e3","\u5e73\u65b9\u6570"]},"unlisted":false,"prevItem":{"title":"AtCoder ABC275 D - Yet Another Recursive Function \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/07/2025/04/abc275_d"},"nextItem":{"title":"AtCoder ABC339 D - Synchronized Players \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/04/2025/04/abs339_d"}},"content":"**\u554f\u984c\u30da\u30fc\u30b8:** [https://atcoder.jp/contests/abc254/tasks/abc254_d](https://atcoder.jp/contests/abc254/tasks/abc254_d)\\n\\n**\u63d0\u51fa\u30b3\u30fc\u30c9:** [https://atcoder.jp/contests/abc254/submissions/64567714](https://atcoder.jp/contests/abc254/submissions/64567714)\\n\\n## \u65b9\u91dd\\n\\n**\u7d50\u8ad6:** 2\u3064\u306e\u6574\u6570 $i, j$ \u306e\u7a4d $i \\\\times j$ \u304c\u5e73\u65b9\u6570\u306b\u306a\u308b\u306e\u306f\u3001$i$ \u3068 $j$ \u3092\u305d\u308c\u305e\u308c\u7d20\u56e0\u6570\u5206\u89e3\u3057\u305f\u3068\u304d\u306b\u3001\u6307\u6570\u304c\u5947\u6570\u3068\u306a\u308b\u7d20\u56e0\u6570\u306e\u96c6\u5408\u304c\u4e92\u3044\u306b\u7b49\u3057\u3044\u5834\u5408\u3067\u3059\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n**\u8a73\u7d30:**\\n\\n\u6574\u6570 $k$ \u3092\u7d20\u56e0\u6570\u5206\u89e3\u3057\u305f\u7d50\u679c\u3092 ${n_1}^{p_1} \\\\cdot {n_2}^{p_2} \\\\cdot {n_3}^{p_3} \\\\cdots {n_m}^{p_m}$ \u3068\u8868\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u3001$n_x \\\\left( 1 \\\\le x \\\\le m \\\\right)$ \u306f\u7d20\u6570\u3001$p_x \\\\left( 1 \\\\le x \\\\le m \\\\right)$ \u306f\u6b63\u306e\u6574\u6570\uff08\u6307\u6570\uff09\u3067\u3059\u3002\\n\\n\u3053\u306e\u3068\u304d\u3001$k$ \u304c\u5e73\u65b9\u6570\u3067\u3042\u308b\u305f\u3081\u306e\u6761\u4ef6\u306f\u3001\u5168\u3066\u306e\u6307\u6570 $p_x$ \u304c\u5076\u6570 $\\\\left( p_x \\\\equiv 0 \\\\pmod 2 \\\\right)$ \u3067\u3042\u308b\u3053\u3068\u3067\u3059\u3002\\n\\n\u672c\u554f\u984c\u3067\u306f\u3001$1 \\\\le i, j \\\\le N$ \u3092\u6e80\u305f\u3059\u6574\u6570\u306e\u30da\u30a2 $(i, j)$ \u3067\u3042\u3063\u3066\u3001$i \\\\times j$ \u304c\u5e73\u65b9\u6570\u3068\u306a\u308b\u3082\u306e\u306e\u500b\u6570\u3092\u6570\u3048\u4e0a\u3052\u307e\u3059\u3002\u7a4d $i \\\\times j$ \u304c\u5e73\u65b9\u6570\u306b\u306a\u308b\u305f\u3081\u306b\u306f\u3001$i \\\\times j$ \u3092\u7d20\u56e0\u6570\u5206\u89e3\u3057\u305f\u969b\u306e\u5168\u3066\u306e\u7d20\u56e0\u6570\u306e\u6307\u6570\u304c\u5076\u6570\u306b\u306a\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\\n\u3053\u308c\u306f\u3001$i$ \u3092\u7d20\u56e0\u6570\u5206\u89e3\u3057\u305f\u3068\u304d\u306b\u6307\u6570\u304c\u5947\u6570\u3068\u306a\u308b\u7d20\u56e0\u6570\u306e\u96c6\u5408\u3068\u3001$j$ \u3092\u7d20\u56e0\u6570\u5206\u89e3\u3057\u305f\u3068\u304d\u306b\u6307\u6570\u304c\u5947\u6570\u3068\u306a\u308b\u7d20\u56e0\u6570\u306e\u96c6\u5408\u304c\u3001\u4e92\u3044\u306b\u4e00\u81f4\u3059\u308b\u5834\u5408\u306b\u9054\u6210\u3055\u308c\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u540c\u3058\u7d20\u56e0\u6570\u306b\u3064\u3044\u3066\u6307\u6570\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3068\u3001(\u5947\u6570 + \u5947\u6570) = \u5076\u6570\u3001(\u5076\u6570 + \u5076\u6570) = \u5076\u6570 \u3068\u306a\u308a\u3001\u5168\u3066\u306e\u7d20\u56e0\u6570\u306e\u6307\u6570\u304c\u5076\u6570\u306b\u306a\u308b\u304b\u3089\u3067\u3059\u3002\\n\\n**\u5177\u4f53\u4f8b:**\\n\\n$i = 3500$ \u3068\u3057\u307e\u3059\u3002$3500 = 2^2 \\\\times 5^3 \\\\times 7^1$ \u3068\u7d20\u56e0\u6570\u5206\u89e3\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u6307\u6570\u304c\u5947\u6570\u3068\u306a\u308b\u7d20\u56e0\u6570\u306f $5$ \u3068 $7$ \u3067\u3059\uff08\u96c6\u5408\u306f {$5, 7$}\uff09\u3002\\n\\n\u3053\u306e $i$ \u306b\u5bfe\u3057\u3066\u3001$j$ \u3068\u3057\u3066\u3001\u540c\u3058\u304f\u6307\u6570\u304c\u5947\u6570\u3068\u306a\u308b\u7d20\u56e0\u6570\u306e\u96c6\u5408\u304c {$5, 7$} \u3068\u306a\u308b\u6570\u3092\u9078\u3073\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6700\u3082\u5358\u7d14\u306a $j$ \u306f $j = 5^1 \\\\times 7^1 = 35$ \u3067\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u7a4d\u306f\\n$i \\\\times j = (2^2 \\\\times 5^3 \\\\times 7^1) \\\\times (5^1 \\\\times 7^1) = 2^2 \\\\times 5^{3+1} \\\\times 7^{1+1} = 2^2 \\\\times 5^4 \\\\times 7^2 = (2^1 \\\\times 5^2 \\\\times 7^1)^2$\\n\u3068\u306a\u308a\u3001\u5e73\u65b9\u6570\u306b\u306a\u308a\u307e\u3059\u3002\\n\\n\u4e00\u822c\u306b\u3001$j$ \u304c $5 \\\\times 7 \\\\times (\\\\text{\u5e73\u65b9\u6570})$ \u306e\u5f62\u3001\u3064\u307e\u308a $j$ \u3092\u7d20\u56e0\u6570\u5206\u89e3\u3057\u305f\u3068\u304d\u306b $5$ \u3068 $7$ \u306e\u6307\u6570\u306e\u307f\u304c\u5947\u6570\u3068\u306a\u308b\u3088\u3046\u306a\u6570\u3067\u3042\u308c\u3070\u3001$i \\\\times j$ \u306f\u5e73\u65b9\u6570\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n**\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0:**\\n\\n\u4ee5\u4e0a\u306e\u8003\u5bdf\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u554f\u984c\u3092\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n1. **\u524d\u51e6\u7406:** $1$ \u304b\u3089 $N$ \u307e\u3067\u306e\u5404\u6574\u6570 $k$ \u306b\u3064\u3044\u3066\u3001\u7d20\u56e0\u6570\u5206\u89e3\u3092\u884c\u3044\u3001\u300c\u6307\u6570\u304c\u5947\u6570\u3068\u306a\u308b\u7d20\u56e0\u6570\u306e\u96c6\u5408\u300d\u3092\u6c42\u3081\u307e\u3059\u3002\u3053\u306e\u96c6\u5408\u3092\uff08\u4f8b\u3048\u3070\u30bd\u30fc\u30c8\u3057\u3066\u30ab\u30f3\u30de\u533a\u5207\u308a\u6587\u5b57\u5217\u306b\u3059\u308b\u306a\u3069\u3057\u3066\uff09\u6b63\u898f\u5316\u3057\u305f\u8868\u73fe\u3092\u30ad\u30fc\u3068\u3057\u3066\u3001\u305d\u306e\u30ad\u30fc\u3092\u6301\u3064\u6574\u6570 $k$ \u304c\u4f55\u500b\u3042\u308b\u304b\u3092\u6570\u3048\u4e0a\u3052\u3001\u8f9e\u66f8\uff08\u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7\uff09\u306a\u3069\u306b\u8a18\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\\n2. **\u96c6\u8a08:** \u518d\u5ea6\u3001$1$ \u304b\u3089 $N$ \u307e\u3067\u306e\u5404\u6574\u6570 $i$ \u306b\u3064\u3044\u3066\u3001\u300c\u6307\u6570\u304c\u5947\u6570\u3068\u306a\u308b\u7d20\u56e0\u6570\u306e\u96c6\u5408\u300d\u306e\u6b63\u898f\u5316\u8868\u73fe\uff08\u30ad\u30fc\uff09\u3092\u6c42\u3081\u307e\u3059\u3002\\n3. \u524d\u51e6\u7406\u3067\u4f5c\u6210\u3057\u305f\u8f9e\u66f8\u3092\u7528\u3044\u3066\u3001\u305d\u306e\u30ad\u30fc\u306b\u5bfe\u5fdc\u3059\u308b\u6574\u6570\u306e\u500b\u6570\uff08\u3064\u307e\u308a\u3001\u81ea\u8eab\u3068\u540c\u3058\u96c6\u5408\u3092\u6301\u3064\u6574\u6570\u306e\u500b\u6570\uff09\u3092\u8abf\u3079\u3001\u7b54\u3048\u306b\u52a0\u7b97\u3057\u3066\u3044\u304d\u307e\u3059\u3002\\n4. \u5168\u3066\u306e $i$ \u306b\u3064\u3044\u3066\u52a0\u7b97\u304c\u7d42\u308f\u308c\u3070\u3001\u305d\u308c\u304c\u6c42\u3081\u308b\u30da\u30a2 $(i, j)$ \u306e\u7dcf\u6570\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n**\u5b9f\u88c5:**\\n\\n\u4ee5\u4e0b\u306eC#\u30b3\u30fc\u30c9\u306f\u3053\u306e\u65b9\u91dd\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002\\n\\n```csharp\\npublic static void Run()\\n{\\n    var iN = ReadLine.Int(); // N \u3092\u8aad\u307f\u8fbc\u3080\\n\\n    // \u5404\u300c\u6307\u6570\u304c\u5947\u6570\u3068\u306a\u308b\u7d20\u56e0\u6570\u306e\u96c6\u5408\u300d\u306e\u6b63\u898f\u5316\u8868\u73fe\uff08\u6587\u5b57\u5217\uff09\u3092\u30ad\u30fc\u3068\u3057\u3001\\n    // \u305d\u306e\u96c6\u5408\u3092\u6301\u3064\u6574\u6570\u306e\u500b\u6570\u3092\u5024\u3068\u3059\u308b\u8f9e\u66f8\\n    var cnter = new Dictionary<string, long>();\\n    // \u5404\u6574\u6570 i (1 <= i <= N) \u306e\u300c\u6307\u6570\u304c\u5947\u6570\u3068\u306a\u308b\u7d20\u56e0\u6570\u306e\u96c6\u5408\u300d\u306e\u6b63\u898f\u5316\u8868\u73fe\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\\n    var pfs = new string[iN + 1];\\n    var ans = 0L; // \u7b54\u3048\uff08\u30da\u30a2\u306e\u7dcf\u6570\uff09\\n\\n    // 1. \u524d\u51e6\u7406: \u5404\u6574\u6570\u306b\u3064\u3044\u3066\u300c\u6307\u6570\u304c\u5947\u6570\u3068\u306a\u308b\u7d20\u56e0\u6570\u306e\u96c6\u5408\u300d\u3092\u6c42\u3081\u3001\u500b\u6570\u3092\u6570\u3048\u308b\\n    for (int i = 1; i <= iN; i++)\\n    {\\n        // i \u3092\u7d20\u56e0\u6570\u5206\u89e3\u3059\u308b\\n        var primes = MathEx.Prime.PrimeFactorization(i);\\n        // \u6307\u6570\u304c\u5947\u6570\u3068\u306a\u308b\u7d20\u56e0\u6570\u3092\u683c\u7d0d\u3059\u308b SortedSet (\u81ea\u52d5\u3067\u30bd\u30fc\u30c8\u3055\u308c\u308b)\\n        var set = new SortedSet<long>();\\n\\n        foreach (var kv in primes)\\n        {\\n            // \u7d20\u56e0\u6570(kv.Key) \u306e\u6307\u6570(kv.Value) \u304c\u5947\u6570 \u304b\u3064 \u7d20\u56e0\u6570\u304c1\u3067\u306a\u3044\u5834\u5408\\n            if (kv.Value % 2 == 1 && kv.Key != 1L)\\n                set.Add(kv.Key); // \u96c6\u5408\u306b\u8ffd\u52a0\\n        }\\n\\n        // \u96c6\u5408\u3092\u30ab\u30f3\u30de\u533a\u5207\u308a\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\uff08\u6b63\u898f\u5316\u8868\u73fe\u3068\u3057\u3066\u5229\u7528\uff09\\n        var str = string.Join(\\",\\", set);\\n        // \u3053\u306e\u96c6\u5408\u3092\u6301\u3064\u6574\u6570\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u5897\u3084\u3059\\n        cnter[str] = cnter.GetValueOrDefault(str, 0L) + 1L;\\n        // \u6574\u6570 i \u306e\u96c6\u5408\u306e\u6b63\u898f\u5316\u8868\u73fe\u3092\u8a18\u9332\u3057\u3066\u304a\u304f\\n        pfs[i] = str;\\n    }\\n\\n    // 2. \u96c6\u8a08: \u5404 i \u306b\u3064\u3044\u3066\u3001\u540c\u3058\u96c6\u5408\u3092\u6301\u3064\u6574\u6570\u306e\u500b\u6570\u3092\u8db3\u3057\u4e0a\u3052\u308b\\n    for (int i = 1; i <= iN; i++)\\n    {\\n        // \u6574\u6570 i \u306e\u96c6\u5408\u306b\u5bfe\u5fdc\u3059\u308b\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\\n        if (cnter.TryGetValue(pfs[i], out var cnt))\\n            // \u7b54\u3048\u306b\u52a0\u7b97 (i \u3068\u30da\u30a2\u306b\u306a\u308c\u308b j \u306e\u500b\u6570\u306f cnt \u500b)\\n            ans += cnt;\\n    }\\n\\n    Console.WriteLine(ans); // \u7d50\u679c\u3092\u51fa\u529b\\n}\\n```"},{"id":"/2025/04/04/2025/04/abs339_d","metadata":{"permalink":"/TAmeBlog/blog/2025/04/04/2025/04/abs339_d","source":"@site/blog/2025/04/2025-04-04-abs339_d.md","title":"AtCoder ABC339 D - Synchronized Players \u89e3\u8aac","description":"\u554f\u984c\u30da\u30fc\u30b8//atcoder.jp/contests/abc339/tasks/abc339d","date":"2025-04-04T00:00:00.000Z","tags":[{"inline":true,"label":"AtCoder","permalink":"/TAmeBlog/blog/tags/at-coder"},{"inline":true,"label":"ABC339","permalink":"/TAmeBlog/blog/tags/abc-339"},{"inline":true,"label":"D","permalink":"/TAmeBlog/blog/tags/d"},{"inline":true,"label":"BFS","permalink":"/TAmeBlog/blog/tags/bfs"},{"inline":true,"label":"\u30b0\u30e9\u30d5\u63a2\u7d22","permalink":"/TAmeBlog/blog/tags/\u30b0\u30e9\u30d5\u63a2\u7d22"},{"inline":true,"label":"\u72b6\u614b\u7a7a\u9593\u63a2\u7d22","permalink":"/TAmeBlog/blog/tags/\u72b6\u614b\u7a7a\u9593\u63a2\u7d22"}],"readingTime":4.21,"hasTruncateMarker":true,"authors":[{"name":"TAmemiya","title":"Small fry IT technician","imageURL":"https://github.com/tarminjapan.png","key":"tame","page":null}],"frontMatter":{"title":"AtCoder ABC339 D - Synchronized Players \u89e3\u8aac","date":"2025-04-04T00:00:00.000Z","authors":["tame"],"tags":["AtCoder","ABC339","D","BFS","\u30b0\u30e9\u30d5\u63a2\u7d22","\u72b6\u614b\u7a7a\u9593\u63a2\u7d22"]},"unlisted":false,"prevItem":{"title":"AtCoder ABC254 D - Together Square \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/06/2025/04/abc254_d"},"nextItem":{"title":"AtCoder ABC325 D - Printing Machine \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/03/2025/04/abs325_d"}},"content":"**\u554f\u984c\u30da\u30fc\u30b8:** [https://atcoder.jp/contests/abc339/tasks/abc339_d](https://atcoder.jp/contests/abc339/tasks/abc339_d)\\n\\n**\u63d0\u51fa\u30b3\u30fc\u30c9:** [https://atcoder.jp/contests/abc339/submissions/64471679](https://atcoder.jp/contests/abc339/submissions/64471679)\\n\\n## \u65b9\u91dd\\n\\n\u3053\u306e\u554f\u984c\u306f\u30012\u4eba\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u4f4d\u7f6e\u306e\u7d44 $(h_1, w_1, h_2, w_2)$ \u30921\u3064\u306e\u72b6\u614b\u3068\u3057\u307e\u3059\u3002\u5236\u7d04 $N \\\\le 60$ \u306b\u3088\u308a\u3001\u72b6\u614b\u306e\u6570\u306f\u6700\u5927\u3067 $60^4 = 12,960,000$ \u3067\u3042\u308b\u305f\u3081\u3001\u5168\u72b6\u614b\u3092\u63a2\u7d22\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n\u521d\u671f\u72b6\u614b\uff082\u4eba\u306e\u521d\u671f\u4f4d\u7f6e\u306e\u7d44\uff09\u304b\u3089\u3001\u5e45\u512a\u5148\u63a2\u7d22 (BFS) \u3092\u7528\u3044\u3066\u3001\u5404\u72b6\u614b\u3078\u5230\u9054\u3059\u308b\u305f\u3081\u306e\u6700\u5c0f\u64cd\u4f5c\u56de\u6570\u3092\u6c42\u3081\u307e\u3059\u30022\u4eba\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u521d\u3081\u3066\u540c\u3058\u30de\u30b9\u306b\u5230\u9054\u3057\u305f\u3089\u3001\u305d\u306e\u64cd\u4f5c\u56de\u6570\u304c\u7b54\u3048\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n## \u5b9f\u88c5\\n\\n```csharp\\nusing TAmeAtCoderLibrary;\\nusing TAmeAtCoderLibrary.Utilities;\\n\\ninternal class Program\\n{\\n    static void Main()\\n    {\\n        SourceExpander.Expander.Expand();\\n        Common.DisableAutoFlush();\\n        Solve.Run();\\n        Common.Flush();\\n    }\\n\\n    public class Solve\\n    {\\n        public static void Run()\\n        {\\n            // \u5165\u529b\u5024\u3092\u53d7\u3051\u53d6\u308b\\n            var iN = ReadLine.Int();\\n            var iS = ReadLine.Strings(iN);\\n\\n            // \u5404\u72b6\u614b (h1, w1, h2, w2) \u3078\u306e\u5230\u9054\u306b\u5fc5\u8981\u306a\u6700\u5c0f\u64cd\u4f5c\u56de\u6570\u3092\u8a18\u9332\u3059\u308b\u914d\u5217\u3002\\n            // \u672a\u8a2a\u554f\u72b6\u614b\u3092\u8868\u3059\u305f\u3081\u306b int.MaxValue \u3067\u521d\u671f\u5316\u3059\u308b\u3002\\n            var cnts = new int[iN, iN, iN, iN];\\n            var queue = new Queue<(int H1, int W1, int H2, int W2, int Count)>();\\n            var sh1 = -1;\\n            var sw1 = -1;\\n            var sh2 = -1;\\n            var sw2 = -1;\\n\\n            for (int h1 = 0; h1 < iN; h1++)\\n                for (int w1 = 0; w1 < iN; w1++)\\n                    for (int h2 = 0; h2 < iN; h2++)\\n                        for (int w2 = 0; w2 < iN; w2++)\\n                            cnts[h1, w1, h2, w2] = int.MaxValue;\\n\\n            // \u30d7\u30ec\u30a4\u30e4\u30fc1\u3068\u30d7\u30ec\u30a4\u30e4\u30fc2\u306e\u521d\u671f\u5ea7\u6a19 (sh1, sw1), (sh2, sw2) \u3092\u63a2\u3059\\n            for (int h = 0; h < iN; h++)\\n                for (int w = 0; w < iN; w++)\\n                    if (iS[h][w] == \'P\')\\n                    {\\n                        if (sh1 == -1 && sw1 == -1)\\n                        {\\n                            sh1 = h;\\n                            sw1 = w;\\n                        }\\n                        else\\n                        {\\n                            sh2 = h;\\n                            sw2 = w;\\n                        }\\n                    }\\n\\n            // \u521d\u671f\u72b6\u614b\u3092\u30ad\u30e5\u30fc\u306b\u8ffd\u52a0\\n            queue.Enqueue((sh1, sw1, sh2, sw2, 0));\\n\\n            // BFS \u3092\u958b\u59cb\\n            while (queue.TryDequeue(out var item))\\n            {\\n                var ch1 = item.H1;\\n                var cw1 = item.W1;\\n                var ch2 = item.H2;\\n                var cw2 = item.W2;\\n                var cnt = item.Count;\\n\\n                // \u53d6\u308a\u51fa\u3057\u305f\u72b6\u614b\u306e\u5ea7\u6a19\u304c\u7bc4\u56f2\u5916\u306a\u3089\u30b9\u30ad\u30c3\u30d7\uff08\u901a\u5e38\u306f\u8d77\u3053\u3089\u306a\u3044\u306f\u305a\u3060\u304c\u3001\u4fdd\u967a\u7684\u306a\u30c1\u30a7\u30c3\u30af\uff09\\n                if (!Validate(ch1, 0, iN - 1)\\n                || !Validate(cw1, 0, iN - 1)\\n                || !Validate(ch2, 0, iN - 1)\\n                || !Validate(cw2, 0, iN - 1))\\n                    continue;\\n\\n                // \u3059\u3067\u306b\u3088\u308a\u77ed\u3044\u624b\u6570\u3067\u5230\u9054\u6e08\u307f\u3067\u3042\u308c\u3070\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u3002\\n                if (cnts[ch1, cw1, ch2, cw2] <= cnt)\\n                    continue;\\n\\n                // \u6700\u5c0f\u5230\u9054\u624b\u6570\u3092\u8a18\u9332\\n                cnts[ch1, cw1, ch2, cw2] = cnt;\\n\\n                // \u30d7\u30ec\u30a4\u30e4\u30fc1\u3068\u30d7\u30ec\u30a4\u30e4\u30fc2\u304c\u540c\u3058\u30de\u30b9\u306b\u5230\u9054\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u6642\u70b9\u3067\u306e\u64cd\u4f5c\u56de\u6570\u304c\u7b54\u3048\u3002\u51fa\u529b\u3057\u3066\u7d42\u4e86\u3002\\n                if (ch1 == ch2 && cw1 == cw2)\\n                {\\n                    Console.WriteLine(cnt);\\n\\n                    return;\\n                }\\n\\n                // \u4e0a\u4e0b\u5de6\u53f3\u306e4\u65b9\u5411\u3078\u79fb\u52d5\u3059\u308b\\n                for (int i = 0; i < 4; i++)\\n                {\\n                    var nh1 = ch1;\\n                    var nw1 = cw1;\\n                    var nh2 = ch2;\\n                    var nw2 = cw2;\\n\\n                    if (i == 0) // \u4e0b\\n                    {\\n                        nh1++;\\n                        nh2++;\\n                    }\\n                    else if (i == 1) // \u4e0a\\n                    {\\n                        nh1--;\\n                        nh2--;\\n                    }\\n                    else if (i == 2) // \u53f3\\n                    {\\n                        nw1++;\\n                        nw2++;\\n                    }\\n                    else if (i == 3) // \u5de6\\n                    {\\n                        nw1--;\\n                        nw2--;\\n                    }\\n\\n                    // --- \u5404\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u79fb\u52d5\u5148\u3092\u30c1\u30a7\u30c3\u30af ---\\n                    if (!Validate(nh1, 0, iN - 1) || iS[nh1][cw1] == \'#\')\\n                        nh1 = ch1;\\n\\n                    if (!Validate(nw1, 0, iN - 1) || iS[ch1][nw1] == \'#\')\\n                        nw1 = cw1;\\n\\n                    if (!Validate(nh2, 0, iN - 1) || iS[nh2][cw2] == \'#\')\\n                        nh2 = ch2;\\n\\n                    if (!Validate(nw2, 0, iN - 1) || iS[ch2][nw2] == \'#\')\\n                        nw2 = cw2;\\n                    // --- \u30c1\u30a7\u30c3\u30af\u5b8c\u4e86 ---\\n\\n                    // \u6b21\u306e\u72b6\u614b\u3092\u30ad\u30e5\u30fc\u306b\u8ffd\u52a0\u3059\u308b\u3002\\n                    queue.Enqueue((nh1, nw1, nh2, nw2, cnt + 1));\\n                }\\n            }\\n\\n            // \u30ad\u30e5\u30fc\u304c\u7a7a\u306b\u306a\u3063\u3066\u3082\u540c\u3058\u30de\u30b9\u306b\u5230\u9054\u3067\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u5230\u9054\u4e0d\u53ef\u80fd\u306a\u306e\u3067-1\u3092\u51fa\u529b\u3059\u308b\u3002\\n            Console.WriteLine(-1);\\n        }\\n\\n        // \u5024p\u304c\u7bc4\u56f2[min, max]\u306b\u542b\u307e\u308c\u308b\u304b\u5224\u5b9a\u3059\u308b\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\\n        public static bool Validate(int p, int min, int max) => min <= p && p <= max;\\n    }\\n}\\n```"},{"id":"/2025/04/03/2025/04/abs325_d","metadata":{"permalink":"/TAmeBlog/blog/2025/04/03/2025/04/abs325_d","source":"@site/blog/2025/04/2025-04-03-abs325_d.md","title":"AtCoder ABC325 D - Printing Machine \u89e3\u8aac","description":"\u554f\u984c\u30da\u30fc\u30b8//atcoder.jp/contests/abc325/tasks/abc325d","date":"2025-04-03T00:00:00.000Z","tags":[{"inline":true,"label":"AtCoder","permalink":"/TAmeBlog/blog/tags/at-coder"},{"inline":true,"label":"ABC325","permalink":"/TAmeBlog/blog/tags/abc-325"},{"inline":true,"label":"D","permalink":"/TAmeBlog/blog/tags/d"},{"inline":true,"label":"PriorityQueue","permalink":"/TAmeBlog/blog/tags/priority-queue"}],"readingTime":7.075,"hasTruncateMarker":true,"authors":[{"name":"TAmemiya","title":"Small fry IT technician","imageURL":"https://github.com/tarminjapan.png","key":"tame","page":null}],"frontMatter":{"title":"AtCoder ABC325 D - Printing Machine \u89e3\u8aac","date":"2025-04-03T00:00:00.000Z","authors":["tame"],"tags":["AtCoder","ABC325","D","PriorityQueue"]},"unlisted":false,"prevItem":{"title":"AtCoder ABC339 D - Synchronized Players \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/04/2025/04/abs339_d"},"nextItem":{"title":"AtCoder ABC274 D - Robot Arms 2 \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/02/2025/04/abs274_d"}},"content":"**\u554f\u984c\u30da\u30fc\u30b8:** [https://atcoder.jp/contests/abc325/tasks/abc325_d](https://atcoder.jp/contests/abc325/tasks/abc325_d)\\n\\n**\u63d0\u51fa\u30b3\u30fc\u30c9:** [https://atcoder.jp/contests/abc325/submissions/64449431](https://atcoder.jp/contests/abc325/submissions/64449431)\\n\\n## \u65b9\u91dd\\n\\n- 2\u3064\u306ePriorityQueue\uff08\u512a\u5148\u5ea6\u4ed8\u304d\u30ad\u30e5\u30fc\uff09 `Pqueue1` \u3068 `Pqueue2` \u3092\u7528\u3044\u3066\u3001\u5546\u54c1\u306e\u6d41\u308c\u3068\u5370\u5b57\u6a5f\u306e\u72b6\u614b\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u307e\u3059\u3002\\n- 1\u3064\u76ee\u306ePriorityQueue `Pqueue1` \u306b\u306f\u3001\u307e\u3060\u5370\u5b57\u6a5f\u306b\u5230\u9054\u3057\u3066\u3044\u306a\u3044\u5546\u54c1\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\\n\xa0 - \u512a\u5148\u5ea6\u306f\u3001\u5546\u54c1\u304c\u5370\u5b57\u6a5f\u306b\u5165\u308b\u6642\u523b $T_i$ \uff08\u5024\u304c\u5c0f\u3055\u3044\u65b9\u304c\u512a\u5148\u5ea6\u9ad8\uff09\u3068\u3057\u307e\u3059\u3002\\n- 2\u3064\u76ee\u306ePriorityQueue `Pqueue2` \u306b\u306f\u3001\u5370\u5b57\u6a5f\u306e\u6709\u52b9\u7bc4\u56f2\u5185\u306b\u3042\u308b\uff08\u5370\u5b57\u5f85\u3061\u306e\uff09\u5546\u54c1\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\\n  - \u512a\u5148\u5ea6\u306f\u3001\u305d\u306e\u5546\u54c1\u304c\u5370\u5b57\u6a5f\u304b\u3089\u6392\u51fa\u3055\u308c\u308b\u3079\u304d\u6642\u523b $T_i + D_i$ \uff08\u5024\u304c\u5c0f\u3055\u3044\u65b9\u304c\u512a\u5148\u5ea6\u9ad8\uff09\u3068\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u5370\u5b57\u53ef\u80fd\u671f\u9593\u304c\u77ed\u3044\uff08\uff1d\u65e9\u304f\u6392\u51fa\u3055\u308c\u308b\u3079\u304d\uff09\u5546\u54c1\u304b\u3089\u51e6\u7406\u3067\u304d\u307e\u3059\u3002\\n- \u73fe\u5728\u306e\u6642\u523b\u3092 `t` \u3068\u3057\u3001 `Pqueue1` \u3068 `Pqueue2` \u306e\u4e21\u65b9\u304c\u7a7a\u306b\u306a\u308b\u307e\u3067\u3001\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n**\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u51e6\u7406\u306e\u8a73\u7d30**\\n\\n\u5404\u30bf\u30a4\u30e0\u30b9\u30c6\u30c3\u30d7\u3067\u3001\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u9806\u756a\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002\\n\\n1. **\u6642\u523b `t` \u306e\u66f4\u65b0\uff08\u30a2\u30a4\u30c9\u30eb\u6642\uff09:**\\n    - **\u6761\u4ef6:** `Pqueue2` \u304c\u7a7a\uff08\u5370\u5b57\u6a5f\u5185\u306b\u5370\u5b57\u5f85\u3061\u306e\u5546\u54c1\u304c\u306a\u3044\uff09\u3067\u3042\u308a\u3001\u304b\u3064 `Pqueue1` \u306b\u5546\u54c1\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u3002\\n    - **\u64cd\u4f5c:** \u73fe\u5728\u6642\u523b `t` \u3092\u3001\u6b21\u306b\u5370\u5b57\u6a5f\u306b\u5165\u308b\u5546\u54c1\u306e\u5230\u7740\u6642\u523b (`Pqueue1` \u306e\u5148\u982d\u8981\u7d20\u306e\u5546\u54c1 `i` \u306e $T_i$) \u306b\u66f4\u65b0\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u5370\u5b57\u6a5f\u304c\u4f5c\u52d5\u3057\u306a\u3044\u6642\u9593\u3092\u30b9\u30ad\u30c3\u30d7\u3057\u307e\u3059\u3002\\n2. **\u5546\u54c1\u306e\u6295\u5165:**\\n    - **\u6761\u4ef6:** `Pqueue1` \u304c\u7a7a\u3067\u306a\u304f\u3001\u304b\u3064\u5148\u982d\u8981\u7d20\u306e\u5546\u54c1 `i` \u306e\u5230\u7740\u6642\u523b $T_i$ \u304c\u73fe\u5728\u306e\u6642\u523b `t` \u3068\u4e00\u81f4\u3059\u308b\u5834\u5408\u3002\\n    - **\u64cd\u4f5c:** `Pqueue1` \u304b\u3089 $T_i = t$ \u3068\u306a\u308b\u5546\u54c1\u3092\u3059\u3079\u3066\u53d6\u308a\u51fa\u3057\u3001`Pqueue2` \u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002`Pqueue2` \u306b\u8ffd\u52a0\u3059\u308b\u969b\u306e\u512a\u5148\u5ea6\u306f\u3001\u6392\u51fa\u6642\u523b $T_i + D_i$ \u3067\u3059\u3002\\n3. **\u5370\u5b57\u671f\u9650\u5207\u308c\u5546\u54c1\u306e\u9664\u53bb:**\\n    - **\u6761\u4ef6:** `Pqueue2` \u304c\u7a7a\u3067\u306a\u304f\u3001\u304b\u3064\u5148\u982d\u8981\u7d20\u306e\u5546\u54c1 `i` \u306e\u6392\u51fa\u6642\u523b $T_i + D_i$ \u304c\u73fe\u5728\u306e\u6642\u523b `t` \u3088\u308a\u5c0f\u3055\u3044\u5834\u5408\u3002\\n    - **\u64cd\u4f5c:** `Pqueue2` \u304b\u3089 $T_i + D_i < t$ \u3068\u306a\u308b\u5546\u54c1\uff08\u5370\u5b57\u53ef\u80fd\u671f\u9593\u3092\u904e\u304e\u305f\u5546\u54c1\uff09\u3092\u3059\u3079\u3066\u53d6\u308a\u9664\u304d\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u5546\u54c1\u306f\u5370\u5b57\u3067\u304d\u307e\u305b\u3093\u3002\\n4. **\u5370\u5b57\u51e6\u7406:**\\n    - **\u6761\u4ef6:** `Pqueue2` \u306b\u5370\u5b57\u53ef\u80fd\u306a\u5546\u54c1\u304c\u5b58\u5728\u3059\u308b\u5834\u5408 (`Pqueue2` \u304c\u7a7a\u3067\u306a\u3044\u5834\u5408\uff09\u3002\\n    - **\u64cd\u4f5c:**\\n        - `Pqueue2` \u304b\u3089\u6700\u3082\u65e9\u304f\u6392\u51fa\u3055\u308c\u308b\u3079\u304d\u5546\u54c1\uff08\u5148\u982d\u8981\u7d20\uff09\u30921\u3064\u53d6\u308a\u51fa\u3057\u307e\u3059\uff08\u3053\u308c\u304c\u5370\u5b57\u3059\u308b\u5546\u54c1\u3067\u3059\uff09\u3002\\n        - \u5370\u5b57\u3057\u305f\u5546\u54c1\u306e\u7dcf\u6570 `ans` \u3092 1 \u5897\u3084\u3057\u307e\u3059\u3002\\n        - \u6642\u523b `t` \u3092 1 \u9032\u3081\u307e\u3059 (\u5370\u5b57\u306b1\u5358\u4f4d\u6642\u9593\u304b\u304b\u308b\u305f\u3081)\u3002\\n\\n## \u5b9f\u88c5\\n\\n```csharp\\npublic static void Run()\\n{\\n\xa0 \xa0 // N: \u5546\u54c1\u306e\u6570\\n\xa0 \xa0 var N = ReadLine.Int();\\n\xa0 \xa0 // TD: \u5404\u5546\u54c1\u306e(\u5230\u7740\u6642\u523b Ti, \u5370\u5b57\u671f\u9593 Di)\u3092\u683c\u7d0d\u3057\u305f\u914d\u5217\\n\xa0 \xa0 var TD = ReadLine.LongMatrix(N);\\n\\n\xa0 \xa0 // Pqueue1: \u672a\u5230\u7740\u306e\u5546\u54c1\u3092\u7ba1\u7406 (\u512a\u5148\u5ea6: \u5230\u7740\u6642\u523b Ti)\\n\xa0 \xa0 //   \u8981\u7d20: (\u5230\u7740\u6642\u523b In, \u6392\u51fa\u6642\u523b Out), \u512a\u5148\u5ea6\u30ad\u30fc: \u5230\u7740\u6642\u523b In\\n\xa0 \xa0 var pque1 = new PriorityQueue<(long In, long Out), long>();\\n\xa0 \xa0 // Pqueue2: \u5370\u5b57\u6a5f\u5185\u306e\u5546\u54c1\u3092\u7ba1\u7406 (\u512a\u5148\u5ea6: \u6392\u51fa\u6642\u523b Ti + Di)\\n\xa0 \xa0 //   \u8981\u7d20: \u6392\u51fa\u6642\u523b Out, \u512a\u5148\u5ea6\u30ad\u30fc: \u6392\u51fa\u6642\u523b Out\\n\xa0 \xa0 var pque2 = new PriorityQueue<long, long>();\\n\\n\xa0 \xa0 // \u5168\u3066\u306e\u5546\u54c1\u3092Pqueue1\u306b\u8ffd\u52a0\\n\xa0 \xa0 foreach (var td in TD)\\n\xa0 \xa0 \xa0 \xa0 // td[0] = Ti (\u5230\u7740\u6642\u523b), td[1] = Di (\u5370\u5b57\u671f\u9593)\\n\xa0 \xa0 \xa0 \xa0 // \u8981\u7d20\u306f (Ti, Ti + Di), \u512a\u5148\u5ea6\u306f Ti\\n\xa0 \xa0 \xa0 \xa0 pque1.Enqueue((td[0], td[0] + td[1]), td[0]);\\n\\n\xa0 \xa0 var ans = 0; // \u5370\u5b57\u3057\u305f\u5546\u54c1\u306e\u7dcf\u6570\\n\xa0 \xa0 var time = 0L; // \u73fe\u5728\u6642\u523b\\n\\n\xa0 \xa0 // Pqueue1 \u304b Pqueue2 \u306e\u3044\u305a\u308c\u304b\u306b\u5546\u54c1\u304c\u6b8b\u3063\u3066\u3044\u308b\u9593\u30eb\u30fc\u30d7\\n\xa0 \xa0 while (1 <= pque1.Count || 1 <= pque2.Count)\\n\xa0 \xa0 {\\n\xa0 \xa0 \xa0 \xa0 // \u51e6\u74061: \u6642\u523bt\u306e\u66f4\u65b0\uff08\u30a2\u30a4\u30c9\u30eb\u6642\uff09\\n\xa0 \xa0 \xa0 \xa0 // Pqueue2\u304c\u7a7a\u3067\u3001Pqueue1\u306b\u5546\u54c1\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\\n\xa0 \xa0 \xa0 \xa0 if (pque2.Count == 0 && 1 <= pque1.Count)\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // \u6b21\u306e\u5546\u54c1\u304c\u5230\u7740\u3059\u308b\u6642\u523b\u307e\u3067time\u3092\u9032\u3081\u308b\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 time = pque1.Peek().In;\\n\\n\xa0 \xa0 \xa0 \xa0 // \u51e6\u74062: \u5546\u54c1\u306e\u6295\u5165\\n\xa0 \xa0 \xa0 \xa0 // Pqueue1\u306b\u5546\u54c1\u304c\u3042\u308a\u3001\u304b\u3064\u5148\u982d\u5546\u54c1\u306e\u5230\u7740\u6642\u523b\u304c\u73fe\u5728\u306etime\u306e\u5834\u5408\\n\xa0 \xa0 \xa0 \xa0 while (1 <= pque1.Count && time == pque1.Peek().In)\\n\xa0 \xa0 \xa0 \xa0 {\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Pqueue1\u304b\u3089\u53d6\u308a\u51fa\u3057\u3001Pqueue2\u3078\u8ffd\u52a0 (\u512a\u5148\u5ea6\u306f\u6392\u51fa\u6642\u523b Out)\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 var item = pque1.Dequeue();\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pque2.Enqueue(item.Out, item.Out);\\n\xa0 \xa0 \xa0 \xa0 }\\n\\n\xa0 \xa0 \xa0 \xa0 // \u51e6\u74063: \u5370\u5b57\u671f\u9650\u5207\u308c\u5546\u54c1\u306e\u9664\u53bb\\n\xa0 \xa0 \xa0 \xa0 // Pqueue2\u306b\u5546\u54c1\u304c\u3042\u308a\u3001\u304b\u3064\u5148\u982d\u5546\u54c1\u306e\u6392\u51fa\u6642\u523b\u304c\u73fe\u5728\u306etime\u3088\u308a\u524d\u306e\u5834\u5408\\n\xa0 \xa0 \xa0 \xa0 while (1 <= pque2.Count && pque2.Peek() < time)\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // \u5370\u5b57\u671f\u9650\u5207\u308c\u306e\u5546\u54c1\u3092Pqueue2\u304b\u3089\u53d6\u308a\u9664\u304f\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pque2.Dequeue();\\n\\n\xa0 \xa0 \xa0 \xa0 // \u51e6\u74064: \u5370\u5b57\u51e6\u7406\\n\xa0 \xa0 \xa0 \xa0 // Pqueue2\u306b\u5370\u5b57\u53ef\u80fd\u306a\u5546\u54c1\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\\n\xa0 \xa0 \xa0 \xa0 if (1 <= pque2.Count)\\n\xa0 \xa0 \xa0 \xa0 {\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // \u6700\u3082\u6392\u51fa\u6642\u523b\u304c\u65e9\u3044\u5546\u54c1\u3092\u5370\u5b57\u3059\u308b\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pque2.Dequeue();\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // \u5370\u5b57\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ans++;\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // \u6642\u9593\u30921\u9032\u3081\u308b\\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 time++;\\n\xa0 \xa0 \xa0 \xa0 }\\n\xa0 \xa0 }\\n\\n\xa0 \xa0 // \u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\\n\xa0 \xa0 Console.WriteLine(ans);\\n}\\n```"},{"id":"/2025/04/02/2025/04/abs274_d","metadata":{"permalink":"/TAmeBlog/blog/2025/04/02/2025/04/abs274_d","source":"@site/blog/2025/04/2025-04-02-abs274_d.md","title":"AtCoder ABC274 D - Robot Arms 2 \u89e3\u8aac","description":"\u554f\u984c\u30da\u30fc\u30b8:","date":"2025-04-02T00:00:00.000Z","tags":[{"inline":true,"label":"AtCoder","permalink":"/TAmeBlog/blog/tags/at-coder"},{"inline":true,"label":"ABC274","permalink":"/TAmeBlog/blog/tags/abc-274"},{"inline":true,"label":"D","permalink":"/TAmeBlog/blog/tags/d"},{"inline":true,"label":"DP","permalink":"/TAmeBlog/blog/tags/dp"},{"inline":true,"label":"\u52d5\u7684\u8a08\u753b\u6cd5","permalink":"/TAmeBlog/blog/tags/\u52d5\u7684\u8a08\u753b\u6cd5"},{"inline":true,"label":"\u5076\u5947\u6027","permalink":"/TAmeBlog/blog/tags/\u5076\u5947\u6027"}],"readingTime":4.72,"hasTruncateMarker":true,"authors":[{"name":"TAmemiya","title":"Small fry IT technician","imageURL":"https://github.com/tarminjapan.png","key":"tame","page":null}],"frontMatter":{"title":"AtCoder ABC274 D - Robot Arms 2 \u89e3\u8aac","date":"2025-04-02T00:00:00.000Z","authors":["tame"],"tags":["AtCoder","ABC274","D","DP","\u52d5\u7684\u8a08\u753b\u6cd5","\u5076\u5947\u6027"]},"unlisted":false,"prevItem":{"title":"AtCoder ABC325 D - Printing Machine \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/03/2025/04/abs325_d"},"nextItem":{"title":"AtCoder ABC284 C - Count Connected Components \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/01/2025/04/_abc284_c"}},"content":"**\u554f\u984c\u30da\u30fc\u30b8:** <https://atcoder.jp/contests/abc274/tasks/abc274_d>\\n\\n**\u63d0\u51fa\u30b3\u30fc\u30c9:** <https://atcoder.jp/contests/abc274/submissions/64427383>\\n\\n## \u65b9\u91dd\\n\\n$X$\u3000\u5ea7\u6a19\u306e\u79fb\u52d5\u3068 $Y$ \u5ea7\u6a19\u306e\u79fb\u52d5\u306f\u72ec\u7acb\u3057\u3066\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n$X$\u3000\u5ea7\u6a19\u306e\u79fb\u52d5\u3092\u4f8b\u306b\u3057\u307e\u3059\u3002\\n\\nDP\u3092\u4f7f\u3063\u3066\u5404\u30b9\u30c6\u30c3\u30d7\u3067\u5230\u9054\u53ef\u80fd\u306a\u5ea7\u6a19\u306e\u96c6\u5408\u3092\u6c42\u3081\u3066\u3044\u304d\u3001\u6700\u7d42\u7684\u306b\u76ee\u6a19\u5ea7\u6a19 $X$ \uff08\u307e\u305f\u306f $Y$ \uff09\u304c\u305d\u306e\u96c6\u5408\u306b\u542b\u307e\u308c\u3066\u3044\u308c\u3070\u3001\u5230\u9054\u53ef\u80fd\u3067\u3042\u308b\u3068\u5224\u65ad\u3067\u304d\u307e\u3059\u3002\u4e21\u65b9\u306e\u5ea7\u6a19\u306b\u3064\u3044\u3066\u5230\u9054\u53ef\u80fd\u3067\u3042\u308c\u3070\u3001\u7b54\u3048\u306f `Yes` \u3068\u306a\u308a\u307e\u3059\u3002\\n\\n$X$ \u5ea7\u6a19\u306e\u79fb\u52d5\u306b\u304b\u304b\u308f\u308b\u306e\u306f\u3001 $A_n (n \\\\equiv 1 \\\\pmod 2) $ \u3067\u3059\u3002\u305f\u3060\u3057\u3001\u6700\u521d\u306e\u79fb\u52d5 $A_1$ \u306f\u3000$+X $ \u65b9\u5411\u306b\u56fa\u5b9a\u3055\u308c\u3001\u521d\u671f\u4f4d\u7f6e\u3068\u306a\u308a\u307e\u3059\u3002\\n\\n| $n$ | \u8003\u3048\u3089\u308c\u308b $X$ \u5ea7\u6a19\u306e\u7d44\u307f\u5408\u308f\u305b | \u7d44\u307f\u5408\u308f\u305b\u306e\u500b\u6570 |\\n|-|-|-|\\n| $1$ | $A_1$ | $1$ |\\n| $3$ | $A_1 + A_3, A_1 - A_3$  | $2$ |\\n| $5$ | $A_1 + A_3 + A_5, A_1 + A_3 - A_5, A_1 - A_3 + A_5, A_1 - A_3 - A_5$  | $4$ |\\n\\n$X$ \u5ea7\u6a19\u306b\u3064\u3044\u3066\u3001$A_3, A_5, \\\\dots$ \u3068\u79fb\u52d5\u304c\u5897\u3048\u308b\u305f\u3073\u306b\u3001\u5230\u9054\u53ef\u80fd\u306a\u5ea7\u6a19\u306e\u7a2e\u985e\u306e\u6570\u306f\u6700\u5927\u3067 $2$ \u500d\u306b\u306a\u3063\u3066\u3044\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u5165\u529b\u5024\u306e\u5236\u7d04 ($1 \\\\le N \\\\le 1000$, $1 \\\\le A_i \\\\le 10$, $|x|, |y| \\\\le 10^4$) \u304b\u3089\u3001\u5230\u9054\u53ef\u80fd\u306a\u5ea7\u6a19\u306e\u7d76\u5bfe\u5024\u306f $\\\\sum A_i \\\\le 10000$ \u3092\u8d85\u3048\u307e\u305b\u3093\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u4f8b\u3048\u3070 $X$ \u5ea7\u6a19\u306b\u3064\u3044\u3066\u306f $[-10000, 10000]$ \u306e\u7bc4\u56f2\u3067\u8003\u3048\u308c\u3070\u5341\u5206\u3067\u3059\u3002\\n\\n\uff08\u5b9f\u88c5\u3067\u306f\u3001 $[-10010, 10010]$ \u306e\u7bc4\u56f2\u5916\u306e\u5ea7\u6a19\u3092\u7121\u8996\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u3002\u3002\uff09\\n\\n\u3057\u305f\u304c\u3063\u3066\u3001\u5404\u30b9\u30c6\u30c3\u30d7\u3067\u4fdd\u6301\u3059\u3079\u304d $X$ \u5ea7\u6a19\u306e\u7a2e\u985e\uff08\u72b6\u614b\u6570\uff09\u306e\u6700\u5927\u6570\u306f\u3001\u7bc4\u56f2\u3092 $[-10000, 10000]$ \u3068\u3059\u308b\u3068 $10000 - (-10000) + 1 = 20001$ \u901a\u308a\u306b\u6291\u3048\u3089\u308c\u307e\u3059\u3002$X$ \u5ea7\u6a19\u306e\u79fb\u52d5\u56de\u6570\u306f\u6700\u5927\u3067\u7d04 $N/2$ \u56de\u306a\u306e\u3067\u3001$X$ \u5ea7\u6a19\u306b\u95a2\u3059\u308b\u8a08\u7b97\u91cf\u306f $O(N \\\\times (\\\\text{\u5ea7\u6a19\u7bc4\u56f2})) \\\\approx O(20000N)$ \u3068\u306a\u308a\u307e\u3059\u3002\\n\\n$Y$ \u5ea7\u6a19\u306b\u3064\u3044\u3066\u3082\u3001$X$ \u5ea7\u6a19\u3068\u540c\u69d8\u306bDP\u3067\u5230\u9054\u53ef\u80fd\u306a\u5ea7\u6a19\u3092\u6c42\u3081\u307e\u3059\u3002$Y$ \u5ea7\u6a19\u306e\u79fb\u52d5\u306b\u95a2\u308f\u308b\u306e\u306f $A_2, A_4, A_6, \\\\dots$ \u3067\u3059\u3002\u521d\u671f\u4f4d\u7f6e\u306f $0$ \u3067\u3042\u308a\u3001$X$ \u5ea7\u6a19\u306e\u5834\u5408\u3068\u7570\u306a\u308a\u3001\u6700\u521d\u306e\u79fb\u52d5 $A_2$ \u304b\u3089\u6b63\u8ca0\u3069\u3061\u3089\u306e\u65b9\u5411\u306b\u3082\u79fb\u52d5\u3067\u304d\u307e\u3059\u3002\u8a08\u7b97\u91cf\u3082\u540c\u69d8\u306b $O(N \\\\times (\\\\text{\u5ea7\u6a19\u7bc4\u56f2}))$ \u3068\u306a\u308a\u307e\u3059\u3002\\n\\n## \u5b9f\u88c5\\n\\n```csharp\\npublic static void Run()\\n{\\n    // \u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\u3002\\n    var inputs = ReadLine.Ints();\\n    int N = inputs[0], X = inputs[1], Y = inputs[2];\\n    var A = ReadLine.Ints();\\n\\n    // A\u304b\u3089X\u5ea7\u6a19\u3068Y\u5ea7\u6a19\u306e\u79fb\u52d5\u306b\u5206\u3051\u308b\u3002\\n    var xnums = A.Where((n, i) => i != 0 && i % 2 == 0).ToArray(); // \u6700\u521d\u306eX\u8ef8\u306e\u79fb\u52d5\u306f\u30b9\u30bf\u30fc\u30c8\u5730\u70b9\u3068\u3059\u308b\u305f\u3081\u7121\u8996\u3059\u308b\u3002\\n    var ynums = A.Where((n, i) => i % 2 == 1).ToArray();\\n\\n    // \u30b4\u30fc\u30eb\u5ea7\u6a19\u306b\u305f\u3069\u308a\u7740\u3051\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3002\\n    var xres = CanGoal(X, A[0], xnums);\\n    var yres = CanGoal(Y, 0, ynums);\\n\\n    // \u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\u3002\\n    Console.WriteLine(xres && yres ? \\"Yes\\" : \\"No\\");\\n}\\n\\npublic static bool CanGoal(int g, int s, int[] nums)\\n{\\n    // DP\u3067\u7ba1\u7406\u3059\u308b\u5ea7\u6a19\u306e\u7bc4\u56f2\uff08\u4e0a\u9650\u3068\u4e0b\u9650\uff09\\n    var max = 10010;\\n    var min = -10010;\\n\\n    // DP\u3092\u5b9f\u884c\u3057\u3066\u3001\u5404\u30b9\u30c6\u30c3\u30d7\u3067\u5230\u9054\u53ef\u80fd\u306a\u5ea7\u6a19\u306e\u96c6\u5408\u3092\u8a08\u7b97\u3057\u3066\u3044\u304f\u3002\\n    var dp = Matrix<int>.CreateDictionary(nums.Length + 1);\\n    dp[0].Add(s);\\n\\n    for (int i = 0; i < nums.Length; i++)\\n        foreach (var c in dp[i])\\n        {\\n            var n1 = c + nums[i];\\n            var n2 = c - nums[i];\\n\\n            // \u8a08\u7b97\u7d50\u679c\u304c\u5ea7\u6a19\u306e\u7bc4\u56f2\u5185\u3067\u3042\u308c\u3070\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7(i+1)\u3067\u5230\u9054\u53ef\u80fd\u306a\u5ea7\u6a19\u3068\u3057\u3066\u8a18\u9332\u3059\u308b\u3002\\n            if (min <= n1 && n1 <= max)\\n                dp[i + 1].Add(n1);\\n\\n            if (min <= n2 && n2 <= max)\\n                dp[i + 1].Add(n2);\\n        }\\n\\n    // \u5168\u3066\u306e\u79fb\u52d5\u3092\u7d42\u3048\u305f\u5f8c\u3001\u76ee\u6a19\u5ea7\u6a19 (g) \u306b\u5230\u9054\u53ef\u80fd\u3067\u3042\u308c\u3070 True \u3092\u8fd4\u3059\u3002\\n    return dp[nums.Length].Contains(g);\\n}\\n```"},{"id":"/2025/04/01/2025/04/_abc284_c","metadata":{"permalink":"/TAmeBlog/blog/2025/04/01/2025/04/_abc284_c","source":"@site/blog/2025/04/2025-04-01_abc284_c.md","title":"AtCoder ABC284 C - Count Connected Components \u89e3\u8aac","description":"\u554f\u984c\u30da\u30fc\u30b8//atcoder.jp/contests/abc284/tasks/abc284c","date":"2025-04-01T00:00:00.000Z","tags":[{"inline":true,"label":"AtCoder","permalink":"/TAmeBlog/blog/tags/at-coder"},{"inline":true,"label":"ABC284","permalink":"/TAmeBlog/blog/tags/abc-284"},{"inline":true,"label":"C","permalink":"/TAmeBlog/blog/tags/c"},{"inline":true,"label":"\u30b0\u30e9\u30d5","permalink":"/TAmeBlog/blog/tags/\u30b0\u30e9\u30d5"},{"inline":true,"label":"BFS","permalink":"/TAmeBlog/blog/tags/bfs"},{"inline":true,"label":"\u9023\u7d50\u6210\u5206","permalink":"/TAmeBlog/blog/tags/\u9023\u7d50\u6210\u5206"}],"readingTime":2.245,"hasTruncateMarker":true,"authors":[{"name":"TAmemiya","title":"Small fry IT technician","imageURL":"https://github.com/tarminjapan.png","key":"tame","page":null}],"frontMatter":{"title":"AtCoder ABC284 C - Count Connected Components \u89e3\u8aac","date":"2025-04-01T00:00:00.000Z","authors":["tame"],"tags":["AtCoder","ABC284","C","\u30b0\u30e9\u30d5","BFS","\u9023\u7d50\u6210\u5206"]},"unlisted":false,"prevItem":{"title":"AtCoder ABC274 D - Robot Arms 2 \u89e3\u8aac","permalink":"/TAmeBlog/blog/2025/04/02/2025/04/abs274_d"}},"content":"**\u554f\u984c\u30da\u30fc\u30b8:** [https://atcoder.jp/contests/abc284/tasks/abc284_c](https://atcoder.jp/contests/abc284/tasks/abc284_c)\\n\\n**\u63d0\u51fa\u30b3\u30fc\u30c9:** [https://atcoder.jp/contests/abc284/submissions/64422892](https://atcoder.jp/contests/abc284/submissions/64422892)\\n\\n## \u65b9\u91dd\\n\\n\u5358\u7d14\u7121\u5411\u30b0\u30e9\u30d5\u306e\u9023\u7d50\u6210\u5206\u3092\u6570\u3048\u308b\u554f\u984c\u3067\u3059\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n\u5168\u3066\u306e\u9802\u70b9 $i \\\\left(1\\\\leq i \\\\leq N\\\\right)$ \u306b\u3064\u3044\u3066\u3001\u307e\u3060\u8a2a\u554f\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u305d\u306e\u9802\u70b9\u3092\u958b\u59cb\u70b9\u3068\u3057\u3066BFS\uff08\u5e45\u512a\u5148\u63a2\u7d22\uff09\u3092\u5b9f\u884c\u3057\u3001\u9023\u7d50\u3057\u3066\u3044\u308b\u9802\u70b9\u3092\u8a2a\u308c\u307e\u3059\u3002\\n\\n- \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u5168\u4f53\u3092\u901a\u3057\u3066\u3001\u8a2a\u554f\u6e08\u307f\u306e\u9802\u70b9\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e `HashSet` \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\\n- \u5404\u9802\u70b9 $i$ \u3092\u8abf\u3079\u308b\u969b\u306b\u3001\u305d\u306e\u9802\u70b9\u304c\u65e2\u306b `HashSet` \u306b\u5b58\u5728\u3059\u308b\u5834\u5408\uff08\u8a2a\u554f\u6e08\u307f\u306e\u5834\u5408\uff09\u306f\u30b9\u30ad\u30c3\u30d7\u3057\u307e\u3059\u3002\u5b58\u5728\u3057\u306a\u3044\uff08\u672a\u8a2a\u554f\u306e\uff09\u5834\u5408\u306f\u3001\u305d\u306e\u9802\u70b9\u3092\u958b\u59cb\u70b9\u3068\u3057\u3066BFS\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\\n- \u672a\u8a2a\u554f\u306e\u9802\u70b9 $i$ \u304b\u3089BFS\u306b\u3088\u308b\u8d70\u67fb\u3092\u958b\u59cb\u3059\u308b\u5834\u5408\u306b\u3001\u9023\u7d50\u6210\u5206\u306e\u30ab\u30a6\u30f3\u30c8\u3092 $1$ \u5897\u3084\u3057\u307e\u3059\u3002\\n\\n\u5168\u3066\u306e\u8d70\u67fb\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30ab\u30a6\u30f3\u30c8\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\\n\\n## \u5b9f\u88c5\\n\\n```csharp\\n// \u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\u3002\\nvar inputs = ReadLine.Ints();\\nint N = inputs[0], M = inputs[1];\\nvar UV = ReadLine.IntMatrix(M);\\n\\n// \u5358\u7d14\u7121\u5411\u30b0\u30e9\u30d5\u306e\u6e96\u5099\u3068\u3001\u8a2a\u554f\u6e08\u307f\u9802\u70b9\u3092\u8a18\u9332\u3059\u308b\u305f\u3081\u306e HashSet \u3092\u4f5c\u6210\u3059\u308b\u3002\\nvar sug = new SimpleUndirectedGraph(N, UV);\\nvar ans = 0;\\nvar set = new HashSet<int>();\\n\\n// \u5168\u3066\u306e\u9802\u70b9\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001\u672a\u8a2a\u554f\u306a\u3089\u958b\u59cb\u5730\u70b9\u3068\u3057\u3066BFS\u3092\u5b9f\u884c\u3059\u308b\u3002\\nfor (int i = 1; i <= N; i++)\\n{\\n    // \u958b\u59cb\u5730\u70b9\u304c\u3001\u65e2\u306b\u8a2a\u308c\u305f\u9802\u70b9\u306e\u5834\u5408\u306f\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u3002\\n    if (set.Contains(i))\\n        continue;\\n\\n    // \u65b0\u3057\u3044\u9023\u7d50\u6210\u5206\u304c\u898b\u3064\u304b\u3063\u305f\u306e\u3067\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u3002\\n    ans++;\\n\\n    // BFS\u3092\u5b9f\u884c\u3059\u308b\u3002\\n    var queue = new Queue<int>();\\n    queue.Enqueue(i);\\n\\n    while (queue.TryDequeue(out var cv))\\n    {\\n        // \u65e2\u306b\u8a2a\u308c\u305f\u9802\u70b9\u306f\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u3002\\n        if (set.Contains(cv))\\n            continue;\\n\\n        set.Add(cv);\\n\\n        foreach (var nv in sug.GetVertices(cv))\\n            queue.Enqueue(nv);\\n    }\\n}\\n\\n// \u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\u3002\\nConsole.WriteLine(ans);\\n```"}]}}')}}]);