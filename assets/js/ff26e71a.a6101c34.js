"use strict";(self.webpackChunkt_ame_blog=self.webpackChunkt_ame_blog||[]).push([[9881],{4237:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Atcoder Begginer Contest/300s/336/abc336c_01","title":"C - Even Digits","description":"URL","source":"@site/docs/Atcoder Begginer Contest/300s/336/abc336c_01.md","sourceDirName":"Atcoder Begginer Contest/300s/336","slug":"/Atcoder Begginer Contest/300s/336/abc336c_01","permalink":"/TAmeBlog/docs/Atcoder Begginer Contest/300s/336/abc336c_01","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"D - Erase Leaves","permalink":"/TAmeBlog/docs/Atcoder Begginer Contest/300s/333/abc333d_01"},"next":{"title":"D - Cheating Gomoku Narabe","permalink":"/TAmeBlog/docs/Atcoder Begginer Contest/300s/337/abc337d_01"}}');var r=t(4848),l=t(8453);const s={},a="C - Even Digits",d={},c=[];function g(e){const n={a:"a",code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"c---even-digits",children:"C - Even Digits"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://atcoder.jp/contests/abc336/tasks/abc336_c",children:"URL"})}),"\n",(0,r.jsx)(n.p,{children:"N\u304b\u3089\u826f\u3044\u6574\u6570\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u5909\u63db\u3067\u304d\u308b\u3002"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"N\u304b\u30891\u3092\u5f15\u304f"}),"\n",(0,r.jsx)(n.li,{children:"5\u9032\u6570\u306b\u5909\u63db\u3059\u308b"}),"\n",(0,r.jsx)(n.li,{children:"\u5404\u6841\u306e\u6570\u5b57\u30922\u500d\u306b\u3059\u308b\u3002"}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"N"}),(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"N-1"}),(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"5\u9032\u6570"}),(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"\u826f\u3044\u6574\u6570"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"1"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"0"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"0"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"2"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"1"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"1"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"3"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"2"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"2"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"4"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"4"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"3"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"3"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"6"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"5"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"4"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"4"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"8"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"6"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"5"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"10"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"20"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"7"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"6"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"11"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"22"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"8"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"7"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"12"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"24"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"9"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"8"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"13"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"26"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"10"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"9"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"14"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"28"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://atcoder.jp/contests/abc336/submissions/52198162",children:"\u63d0\u51fa\u7d50\u679c"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:'title="C#"',children:'using System.Text;\n\npublic class Program\n{\n    public static void Main()\n    {\n        DisableAutoFlush();\n        Solve.Run();\n        Flush();\n    }\n\n    public static class Solve\n    {\n        public static void Run()\n        {\n            var iN = ReadLineLong();\n\n            var penta = ConvertBase(iN - 1, 5).ToCharArray();\n\n            for (int i = 0; i < penta.Length; i++)\n                penta[i] = (int.Parse(penta[i].ToString()) * 2).ToString()[0];\n\n            Console.WriteLine(new string(penta));\n        }\n\n        /// <summary>\n        /// 10\u9032\u6570\u304b\u3089n\u9032\u6570\u306b\u5909\u63db\u3059\u308b\u3002\n        /// </summary>\n        public static string ConvertBase(long dec, long n)\n        {\n            if (dec == 0L) return "0";\n\n            var stack = new Stack<long>();\n            while (0 < dec)\n            {\n                var mod = dec % n;\n                stack.Push(mod);\n                dec /= n;\n            }\n\n            return string.Join("", stack);\n        }\n\n        // ----------------------------------------------------------------------------------------------------\n        // --- Readline\n        // ----------------------------------------------------------------------------------------------------\n        public static double ReadLineDouble() => double.Parse(ReadLineString());\n        public static double[] ReadLineDoubles() => ReadLineStrings().Select(double.Parse).ToArray();\n        public static double[] ReadLinesDoubles(int height) => Enumerable.Range(0, height).Select(_ => ReadLineDouble()).ToArray();\n        public static double[][] ReadLinesDoubleMatrix(int height) => Enumerable.Range(0, height).Select(_ => ReadLineDoubles()).ToArray();\n        public static decimal ReadLineDecimal() => decimal.Parse(ReadLineString());\n        public static decimal[] ReadLineDecimals() => ReadLineStrings().Select(decimal.Parse).ToArray();\n        public static decimal[] ReadLinesDecimals(int height) => Enumerable.Range(0, height).Select(_ => ReadLineDecimal()).ToArray();\n        public static decimal[][] ReadLinesDecimalMatrix(int height) => Enumerable.Range(0, height).Select(_ => ReadLineDecimals()).ToArray();\n        public static int ReadLineInt() => int.Parse(ReadLineString());\n        public static int[] ReadLineInts() => ReadLineStrings().Select(int.Parse).ToArray();\n        public static int[] ReadLinesInts(int height) => Enumerable.Range(0, height).Select(_ => ReadLineInt()).ToArray();\n        public static int[][] ReadLinesIntMatrix(int height) => Enumerable.Range(0, height).Select(_ => ReadLineInts()).ToArray();\n        public static long ReadLineLong() => long.Parse(ReadLineString());\n        public static long[] ReadLineLongs() => ReadLineStrings().Select(long.Parse).ToArray();\n        public static long[] ReadLinesLongs(int height) => Enumerable.Range(0, height).Select(_ => ReadLineLong()).ToArray();\n        public static long[][] ReadLinesLongMatrix(long height) => Enumerable.Range(0, (int)height).Select(_ => ReadLineLongs()).ToArray();\n        public static string ReadLineString() => Console.ReadLine().TrimStart().TrimEnd();\n        public static string[] ReadLineStrings() => Console.ReadLine().TrimStart().TrimEnd().Split();\n        public static string[] ReadLinesStrings(int height) => Enumerable.Range(0, height).Select(_ => ReadLineString()).ToArray();\n        public static string[][] ReadLinesStringMatrix(int height) => Enumerable.Range(0, height).Select(_ => ReadLineStrings()).ToArray();\n        public static char[][] ReadLinesCharMatrix(int height) => Enumerable.Range(0, height).Select(_ => ReadLineString().ToCharArray()).ToArray();\n\n        // ----------------------------------------------------------------------------------------------------\n        // --- Math\n        // ----------------------------------------------------------------------------------------------------\n\n        /// <summary>\n        /// Returns a specified number raised to the specified power.\n        /// </summary>\n        /// <returns>The number x raised to the power y.</returns>\n        public static long Pow(long x, int y)\n        {\n            var pow = 1L;\n\n            for (int i = 0; i < y; i++)\n                pow *= x;\n\n            return pow;\n        }\n\n        /// <summary>\n        /// \u5272\u308a\u7b97\u3059\u308b\u3002\uff08\u5207\u308a\u4e0a\u3052\uff09\n        /// </summary>\n        public static long Ceiling(long bloken, long divided) => bloken % divided == 0L ? bloken / divided : bloken / divided + 1L;\n\n        /// <summary>\n        /// \u5272\u308a\u7b97\u3059\u308b\u3002\uff08\u5207\u308a\u4e0a\u3052\uff09\n        /// </summary>\n        public static int Ceiling(int bloken, int divided) => (int)Ceiling((long)bloken, divided);\n    }\n\n    public static void DisableAutoFlush()\n    { Console.SetOut(new StreamWriter(Console.OpenStandardOutput()) { AutoFlush = false }); }\n\n    public static void Flush()\n    { Console.Out.Flush(); }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const r={},l=i.createContext(r);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);